/*
    goahead-nanossl.me -- Mocana NanoSSL Component for GoAhead
 */

Me.load({ 
    targets: {
        nanossl: {
            description: 'Mocana NanoSSL',
            config: function (target) {
                if (me.options.gen) {
                    return {
                        includes: [ '$(ME_COM_NANOSSL_PATH)/src' ],
                        libpaths: [ '$(ME_COM_NANOSSL_PATH)/bin' ],
                        libraries: [ 'libssls' ],
                    }
                }
                let search = getComponentSearch(target, 'nanossl', 'bin')
                let lib = probe('libssls.' + me.ext.lib, {fullpath: true, search: search}).absolute
                let path = lib.dirname.parent
                let incdir = probe('common/moptions.h', {search: [path.join('src')]}).absolute
                return {
                    includes:  [ incdir, me.dir.inc ]
                    libpaths:  [ lib.dirname ]
                    libraries: [ 'libssls' ]
                    imports:   [ lib ]
                }
            },
            ifdef:     [ 'ssl' ],
            conflicts: [ 'mbedtls', 'matrixssl', 'openssl' ],
            depends:   [ 'libgoahead-nanossl' ],
        },

        'libgoahead-nanossl': {
            description:  'GoAhead NanoSSL Interface',
            type:         'lib',
            static:       true,
            path:         '${BIN}/libgoahead-nanossl${ARLIB}',
            ifdef:        [ 'nanossl' ],
            sources:      [ '*.c' ],
            postresolve: `
                let target = me.target
                let nanossl = me.targets.nanossl

                target.includes += nanossl.includes
                target.libpaths += nanossl.libpaths
                target.libraries += nanossl.libraries
            `
        }
    }
})
