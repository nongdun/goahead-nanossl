/*
    nanossl.me -- Mocana NanoSSL Component for GoAhead
 */

Me.load({ 
    targets: {
        nanossl: {
            description: 'Mocana NanoSSL',
            config: function (target) {
                if (me.options.gen) {
                    return {
                        path: me.dir.bin.join('libnanossl').joinExt(me.ext.lib),
                        includes: [ '$(ME_COM_NANOSSL_PATH)/src' ],
                        libpaths: [ '$(ME_COM_NANOSSL_PATH)/bin' ],
                        libraries: [ 'libssls' ],
                    }
                }
                let search = getComponentSearch(target, 'nanossl', 'bin')
                let lib = probe('libssls.' + me.ext.lib, {fullpath: true, search: search}).absolute
                let path = lib.dirname.parent
                let incdir = probe('common/moptions.h', {search: [path.join('src')]}).absolute
                return {
                    path:      me.dir.bin.join('libnanossl').joinExt(me.ext.lib),
                    includes:  [ incdir, me.dir.inc ]
                    libpaths:  [ lib.dirname ]
                    libraries: [ 'libssls' ]
                    imports:   [ lib ]
                }
            },
            ifdef:     [ 'ssl' ],
            conflicts: [ 'est', 'matrixssl', 'openssl' ],
            type:      'lib',
            static:    true,
            sources:   [ '*.c' ],
        }
    }
})
